@model MathProject.Models.Question

@{
    ViewData["Title"] = "Rozwiązuj zadanie";
}

<h2>Zadanie</h2>

        
<div class="row">
    <div class="col-md-7">
        <form asp-action="Solve" id="question">
            <div class="form-group">
                <h4> @Html.DisplayFor(model => model.Content)</h4>
            </div>
            <div class="form-group">
                <input asp-for="CorrectAnswer" class="form-control" value="" />
            </div>
            <div class="form-group">
                <input type="submit" id="check" value="Sprawdźmy" class="btn btn-default" />|
                <a class="btn btn-default" asp-action="Index">Powrót do kategorii </a>|
                <a class="btn btn-default" asp-action="PickRandomQuestionAndSolve" asp-route-questionID="@Model.ID">Losuj kolejne zadanie</a>
            </div>
        </form>
            
            
            <div id="checked">
              
            </div>

    </div>
</div>
@{ //both ways working, more or less the same effect
     if (ViewBag.Result == "Good")
    {
        
        @Html.Partial("Good");

        //<h3>To dobra odpowiedź, gratulacje!</h3>
    }
    else if (ViewBag.Result == "Wrong")
    {
        
        @Html.Partial("Wrong");
        //<h3>To zła odpowiedź, spróbuj jeszcze raz albo skorzystaj z hintów</h3>
    }



}
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
