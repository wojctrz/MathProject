@model MathProject.Models.Question
@using MathProject.Models;
@{
    ViewData["Title"] = "Create";
}

<h2>Dodaj</h2>

<h4>Pytanie</h4>
<hr />
<div class="row">
    <div class="col-md-3">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @{

                    var names = Enum.GetNames(typeof(Categories));

                    var itemmms = new List<SelectListItem>();
                    foreach (var item in names)
                    {
                        itemmms.Add(new SelectListItem{ Text = item });
                    }
                }
                <label asp-for="Category" class="control-label"></label>
                <select asp-for="Category" class="form-control" asp-items="itemmms"></select>
                <span asp-validation-for="Category" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Content" class="control-label"></label>
                <input asp-for="Content" class="form-control" />
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CorrectAnswer" class="control-label"></label>
                <input asp-for="CorrectAnswer" class="form-control" />
                <span asp-validation-for="CorrectAnswer" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
